// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.app_id = "two.screens.woom"
    ext.min_sdk = 23
    ext.compile_sdk = 29
    ext.target_sdk = 29
    ext.gradle_version = '3.5.0'
    ext.kotlin_version = '1.3.50'
    ext.koin_version = '2.0.1'
    ext.google_services_version = '4.3.1'
    ext.gson_version = '2.8.5'
    ext.nav_version = "2.2.0-rc01"
    ext.okhttp_version = "4.2.2"
    ext.picasso_ersion = '2.71828'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "com.google.gms:google-services:$google_services_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


// Versioning
def readVersion() {
    def versionFile = new File(project.rootDir, 'version.properties')
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }

    if (!version['versionName']) version['versionName'] = "0.1.0"
    return version
}

def readVersionName() {
    def version = readVersion()
    def versionName = "${version['versionName']}"
    return versionName
}

def readVersionCode() {
    def version = readVersion()
    def versionCode = version['versionCode'] as int
    return versionCode
}

